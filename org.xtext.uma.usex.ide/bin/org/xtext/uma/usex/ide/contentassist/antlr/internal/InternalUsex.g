/*
 * generated by Xtext 2.25.0
 */
grammar InternalUsex;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.uma.usex.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.uma.usex.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.uma.usex.services.UsexGrammarAccess;

}
@parser::members {
	private UsexGrammarAccess grammarAccess;

	public void setGrammarAccess(UsexGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractElement
entryRuleAbstractElement
:
{ before(grammarAccess.getAbstractElementRule()); }
	 ruleAbstractElement
{ after(grammarAccess.getAbstractElementRule()); } 
	 EOF 
;

// Rule AbstractElement
ruleAbstractElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractElementAccess().getAlternatives()); }
		(rule__AbstractElement__Alternatives)
		{ after(grammarAccess.getAbstractElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUseClass
entryRuleUseClass
:
{ before(grammarAccess.getUseClassRule()); }
	 ruleUseClass
{ after(grammarAccess.getUseClassRule()); } 
	 EOF 
;

// Rule UseClass
ruleUseClass 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUseClassAccess().getGroup()); }
		(rule__UseClass__Group__0)
		{ after(grammarAccess.getUseClassAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttribute
entryRuleAttribute
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeAccess().getGroup()); }
		(rule__Attribute__Group__0)
		{ after(grammarAccess.getAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeType
entryRuleAttributeType
:
{ before(grammarAccess.getAttributeTypeRule()); }
	 ruleAttributeType
{ after(grammarAccess.getAttributeTypeRule()); } 
	 EOF 
;

// Rule AttributeType
ruleAttributeType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeTypeAccess().getAlternatives()); }
		(rule__AttributeType__Alternatives)
		{ after(grammarAccess.getAttributeTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimitiveType
entryRulePrimitiveType
:
{ before(grammarAccess.getPrimitiveTypeRule()); }
	 rulePrimitiveType
{ after(grammarAccess.getPrimitiveTypeRule()); } 
	 EOF 
;

// Rule PrimitiveType
rulePrimitiveType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getTypeAssignment()); }
		(rule__PrimitiveType__TypeAssignment)
		{ after(grammarAccess.getPrimitiveTypeAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassType
entryRuleClassType
:
{ before(grammarAccess.getClassTypeRule()); }
	 ruleClassType
{ after(grammarAccess.getClassTypeRule()); } 
	 EOF 
;

// Rule ClassType
ruleClassType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassTypeAccess().getTypeAssignment()); }
		(rule__ClassType__TypeAssignment)
		{ after(grammarAccess.getClassTypeAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeInitialization
entryRuleAttributeInitialization
:
{ before(grammarAccess.getAttributeInitializationRule()); }
	 ruleAttributeInitialization
{ after(grammarAccess.getAttributeInitializationRule()); } 
	 EOF 
;

// Rule AttributeInitialization
ruleAttributeInitialization 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeInitializationAccess().getAlternatives()); }
		(rule__AttributeInitialization__Alternatives)
		{ after(grammarAccess.getAttributeInitializationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDoubleInitialization
entryRuleDoubleInitialization
:
{ before(grammarAccess.getDoubleInitializationRule()); }
	 ruleDoubleInitialization
{ after(grammarAccess.getDoubleInitializationRule()); } 
	 EOF 
;

// Rule DoubleInitialization
ruleDoubleInitialization 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDoubleInitializationAccess().getValueAssignment()); }
		(rule__DoubleInitialization__ValueAssignment)
		{ after(grammarAccess.getDoubleInitializationAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanInitialization
entryRuleBooleanInitialization
:
{ before(grammarAccess.getBooleanInitializationRule()); }
	 ruleBooleanInitialization
{ after(grammarAccess.getBooleanInitializationRule()); } 
	 EOF 
;

// Rule BooleanInitialization
ruleBooleanInitialization 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanInitializationAccess().getValueAssignment()); }
		(rule__BooleanInitialization__ValueAssignment)
		{ after(grammarAccess.getBooleanInitializationAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntegerInitialization
entryRuleIntegerInitialization
:
{ before(grammarAccess.getIntegerInitializationRule()); }
	 ruleIntegerInitialization
{ after(grammarAccess.getIntegerInitializationRule()); } 
	 EOF 
;

// Rule IntegerInitialization
ruleIntegerInitialization 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntegerInitializationAccess().getValueAssignment()); }
		(rule__IntegerInitialization__ValueAssignment)
		{ after(grammarAccess.getIntegerInitializationAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringInitialization
entryRuleStringInitialization
:
{ before(grammarAccess.getStringInitializationRule()); }
	 ruleStringInitialization
{ after(grammarAccess.getStringInitializationRule()); } 
	 EOF 
;

// Rule StringInitialization
ruleStringInitialization 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringInitializationAccess().getValueAssignment()); }
		(rule__StringInitialization__ValueAssignment)
		{ after(grammarAccess.getStringInitializationAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperation
entryRuleOperation
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationAccess().getAlternatives()); }
		(rule__Operation__Alternatives)
		{ after(grammarAccess.getOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethod
entryRuleMethod
:
{ before(grammarAccess.getMethodRule()); }
	 ruleMethod
{ after(grammarAccess.getMethodRule()); } 
	 EOF 
;

// Rule Method
ruleMethod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodAccess().getGroup()); }
		(rule__Method__Group__0)
		{ after(grammarAccess.getMethodAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQuery
entryRuleQuery
:
{ before(grammarAccess.getQueryRule()); }
	 ruleQuery
{ after(grammarAccess.getQueryRule()); } 
	 EOF 
;

// Rule Query
ruleQuery 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQueryAccess().getGroup()); }
		(rule__Query__Group__0)
		{ after(grammarAccess.getQueryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getGroup()); }
		(rule__Parameter__Group__0)
		{ after(grammarAccess.getParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getAlternatives()); }
		(rule__Condition__Alternatives)
		{ after(grammarAccess.getConditionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrecondition
entryRulePrecondition
:
{ before(grammarAccess.getPreconditionRule()); }
	 rulePrecondition
{ after(grammarAccess.getPreconditionRule()); } 
	 EOF 
;

// Rule Precondition
rulePrecondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPreconditionAccess().getGroup()); }
		(rule__Precondition__Group__0)
		{ after(grammarAccess.getPreconditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePostcondition
entryRulePostcondition
:
{ before(grammarAccess.getPostconditionRule()); }
	 rulePostcondition
{ after(grammarAccess.getPostconditionRule()); } 
	 EOF 
;

// Rule Postcondition
rulePostcondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPostconditionAccess().getGroup()); }
		(rule__Postcondition__Group__0)
		{ after(grammarAccess.getPostconditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionBody
entryRuleConditionBody
:
{ before(grammarAccess.getConditionBodyRule()); }
	 ruleConditionBody
{ after(grammarAccess.getConditionBodyRule()); } 
	 EOF 
;

// Rule ConditionBody
ruleConditionBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionBodyAccess().getGroup()); }
		(rule__ConditionBody__Group__0)
		{ after(grammarAccess.getConditionBodyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstraint
entryRuleConstraint
:
{ before(grammarAccess.getConstraintRule()); }
	 ruleConstraint
{ after(grammarAccess.getConstraintRule()); } 
	 EOF 
;

// Rule Constraint
ruleConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstraintAccess().getGroup()); }
		(rule__Constraint__Group__0)
		{ after(grammarAccess.getConstraintAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelation
entryRuleRelation
:
{ before(grammarAccess.getRelationRule()); }
	 ruleRelation
{ after(grammarAccess.getRelationRule()); } 
	 EOF 
;

// Rule Relation
ruleRelation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationAccess().getAlternatives()); }
		(rule__Relation__Alternatives)
		{ after(grammarAccess.getRelationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssociation
entryRuleAssociation
:
{ before(grammarAccess.getAssociationRule()); }
	 ruleAssociation
{ after(grammarAccess.getAssociationRule()); } 
	 EOF 
;

// Rule Association
ruleAssociation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssociationAccess().getGroup()); }
		(rule__Association__Group__0)
		{ after(grammarAccess.getAssociationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComposition
entryRuleComposition
:
{ before(grammarAccess.getCompositionRule()); }
	 ruleComposition
{ after(grammarAccess.getCompositionRule()); } 
	 EOF 
;

// Rule Composition
ruleComposition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompositionAccess().getGroup()); }
		(rule__Composition__Group__0)
		{ after(grammarAccess.getCompositionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationBody
entryRuleRelationBody
:
{ before(grammarAccess.getRelationBodyRule()); }
	 ruleRelationBody
{ after(grammarAccess.getRelationBodyRule()); } 
	 EOF 
;

// Rule RelationBody
ruleRelationBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationBodyAccess().getGroup()); }
		(rule__RelationBody__Group__0)
		{ after(grammarAccess.getRelationBodyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationMember
entryRuleRelationMember
:
{ before(grammarAccess.getRelationMemberRule()); }
	 ruleRelationMember
{ after(grammarAccess.getRelationMemberRule()); } 
	 EOF 
;

// Rule RelationMember
ruleRelationMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationMemberAccess().getGroup()); }
		(rule__RelationMember__Group__0)
		{ after(grammarAccess.getRelationMemberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCardinalityType
entryRuleCardinalityType
:
{ before(grammarAccess.getCardinalityTypeRule()); }
	 ruleCardinalityType
{ after(grammarAccess.getCardinalityTypeRule()); } 
	 EOF 
;

// Rule CardinalityType
ruleCardinalityType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCardinalityTypeAccess().getAlternatives()); }
		(rule__CardinalityType__Alternatives)
		{ after(grammarAccess.getCardinalityTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleCardinality
entryRuleSimpleCardinality
:
{ before(grammarAccess.getSimpleCardinalityRule()); }
	 ruleSimpleCardinality
{ after(grammarAccess.getSimpleCardinalityRule()); } 
	 EOF 
;

// Rule SimpleCardinality
ruleSimpleCardinality 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleCardinalityAccess().getCardinalityAssignment()); }
		(rule__SimpleCardinality__CardinalityAssignment)
		{ after(grammarAccess.getSimpleCardinalityAccess().getCardinalityAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDoubleCardinality
entryRuleDoubleCardinality
:
{ before(grammarAccess.getDoubleCardinalityRule()); }
	 ruleDoubleCardinality
{ after(grammarAccess.getDoubleCardinalityRule()); } 
	 EOF 
;

// Rule DoubleCardinality
ruleDoubleCardinality 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDoubleCardinalityAccess().getGroup()); }
		(rule__DoubleCardinality__Group__0)
		{ after(grammarAccess.getDoubleCardinalityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCardinalityValue
entryRuleCardinalityValue
:
{ before(grammarAccess.getCardinalityValueRule()); }
	 ruleCardinalityValue
{ after(grammarAccess.getCardinalityValueRule()); } 
	 EOF 
;

// Rule CardinalityValue
ruleCardinalityValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCardinalityValueAccess().getAlternatives()); }
		(rule__CardinalityValue__Alternatives)
		{ after(grammarAccess.getCardinalityValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntCardinality
entryRuleIntCardinality
:
{ before(grammarAccess.getIntCardinalityRule()); }
	 ruleIntCardinality
{ after(grammarAccess.getIntCardinalityRule()); } 
	 EOF 
;

// Rule IntCardinality
ruleIntCardinality 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntCardinalityAccess().getValueAssignment()); }
		(rule__IntCardinality__ValueAssignment)
		{ after(grammarAccess.getIntCardinalityAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAsteriskCardinality
entryRuleAsteriskCardinality
:
{ before(grammarAccess.getAsteriskCardinalityRule()); }
	 ruleAsteriskCardinality
{ after(grammarAccess.getAsteriskCardinalityRule()); } 
	 EOF 
;

// Rule AsteriskCardinality
ruleAsteriskCardinality 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAsteriskCardinalityAccess().getValueAssignment()); }
		(rule__AsteriskCardinality__ValueAssignment)
		{ after(grammarAccess.getAsteriskCardinalityAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractElementAccess().getRelationParserRuleCall_0()); }
		ruleRelation
		{ after(grammarAccess.getAbstractElementAccess().getRelationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractElementAccess().getUseClassParserRuleCall_1()); }
		ruleUseClass
		{ after(grammarAccess.getAbstractElementAccess().getUseClassParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeTypeAccess().getPrimitiveTypeParserRuleCall_0()); }
		rulePrimitiveType
		{ after(grammarAccess.getAttributeTypeAccess().getPrimitiveTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeTypeAccess().getClassTypeParserRuleCall_1()); }
		ruleClassType
		{ after(grammarAccess.getAttributeTypeAccess().getClassTypeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__TypeAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getTypeStringKeyword_0_0()); }
		'String'
		{ after(grammarAccess.getPrimitiveTypeAccess().getTypeStringKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getTypeRealKeyword_0_1()); }
		'Real'
		{ after(grammarAccess.getPrimitiveTypeAccess().getTypeRealKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getTypeIntegerKeyword_0_2()); }
		'Integer'
		{ after(grammarAccess.getPrimitiveTypeAccess().getTypeIntegerKeyword_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getTypeBooleanKeyword_0_3()); }
		'Boolean'
		{ after(grammarAccess.getPrimitiveTypeAccess().getTypeBooleanKeyword_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeInitialization__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeInitializationAccess().getDoubleInitializationParserRuleCall_0()); }
		ruleDoubleInitialization
		{ after(grammarAccess.getAttributeInitializationAccess().getDoubleInitializationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeInitializationAccess().getBooleanInitializationParserRuleCall_1()); }
		ruleBooleanInitialization
		{ after(grammarAccess.getAttributeInitializationAccess().getBooleanInitializationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeInitializationAccess().getIntegerInitializationParserRuleCall_2()); }
		ruleIntegerInitialization
		{ after(grammarAccess.getAttributeInitializationAccess().getIntegerInitializationParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeInitializationAccess().getStringInitializationParserRuleCall_3()); }
		ruleStringInitialization
		{ after(grammarAccess.getAttributeInitializationAccess().getStringInitializationParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getMethodParserRuleCall_0()); }
		ruleMethod
		{ after(grammarAccess.getOperationAccess().getMethodParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperationAccess().getQueryParserRuleCall_1()); }
		ruleQuery
		{ after(grammarAccess.getOperationAccess().getQueryParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getPreconditionParserRuleCall_0()); }
		rulePrecondition
		{ after(grammarAccess.getConditionAccess().getPreconditionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditionAccess().getPostconditionParserRuleCall_1()); }
		rulePostcondition
		{ after(grammarAccess.getConditionAccess().getPostconditionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getAssociationParserRuleCall_0()); }
		ruleAssociation
		{ after(grammarAccess.getRelationAccess().getAssociationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationAccess().getCompositionParserRuleCall_1()); }
		ruleComposition
		{ after(grammarAccess.getRelationAccess().getCompositionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardinalityType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCardinalityTypeAccess().getSimpleCardinalityParserRuleCall_0()); }
		ruleSimpleCardinality
		{ after(grammarAccess.getCardinalityTypeAccess().getSimpleCardinalityParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCardinalityTypeAccess().getDoubleCardinalityParserRuleCall_1()); }
		ruleDoubleCardinality
		{ after(grammarAccess.getCardinalityTypeAccess().getDoubleCardinalityParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardinalityValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCardinalityValueAccess().getIntCardinalityParserRuleCall_0()); }
		ruleIntCardinality
		{ after(grammarAccess.getCardinalityValueAccess().getIntCardinalityParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCardinalityValueAccess().getAsteriskCardinalityParserRuleCall_1()); }
		ruleAsteriskCardinality
		{ after(grammarAccess.getCardinalityValueAccess().getAsteriskCardinalityParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getModelKeyword_0()); }
	'model'
	{ after(grammarAccess.getModelAccess().getModelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getNameAssignment_1()); }
	(rule__Model__NameAssignment_1)
	{ after(grammarAccess.getModelAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getElementsAssignment_2()); }
	(rule__Model__ElementsAssignment_2)*
	{ after(grammarAccess.getModelAccess().getElementsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UseClass__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseClass__Group__0__Impl
	rule__UseClass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseClass__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseClassAccess().getClassKeyword_0()); }
	'class'
	{ after(grammarAccess.getUseClassAccess().getClassKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseClass__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseClass__Group__1__Impl
	rule__UseClass__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UseClass__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseClassAccess().getNameAssignment_1()); }
	(rule__UseClass__NameAssignment_1)
	{ after(grammarAccess.getUseClassAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseClass__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseClass__Group__2__Impl
	rule__UseClass__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UseClass__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseClassAccess().getGroup_2()); }
	(rule__UseClass__Group_2__0)?
	{ after(grammarAccess.getUseClassAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseClass__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseClass__Group__3__Impl
	rule__UseClass__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UseClass__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseClassAccess().getGroup_3()); }
	(rule__UseClass__Group_3__0)?
	{ after(grammarAccess.getUseClassAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseClass__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseClass__Group__4__Impl
	rule__UseClass__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UseClass__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseClassAccess().getGroup_4()); }
	(rule__UseClass__Group_4__0)?
	{ after(grammarAccess.getUseClassAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseClass__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseClass__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseClass__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseClassAccess().getEndKeyword_5()); }
	'end'
	{ after(grammarAccess.getUseClassAccess().getEndKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UseClass__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseClass__Group_2__0__Impl
	rule__UseClass__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseClass__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseClassAccess().getAttributesKeyword_2_0()); }
	'attributes'
	{ after(grammarAccess.getUseClassAccess().getAttributesKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseClass__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseClass__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseClass__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseClassAccess().getAttributesAssignment_2_1()); }
	(rule__UseClass__AttributesAssignment_2_1)*
	{ after(grammarAccess.getUseClassAccess().getAttributesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UseClass__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseClass__Group_3__0__Impl
	rule__UseClass__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseClass__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseClassAccess().getOperationsKeyword_3_0()); }
	'operations'
	{ after(grammarAccess.getUseClassAccess().getOperationsKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseClass__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseClass__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseClass__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseClassAccess().getOperationsAssignment_3_1()); }
	(rule__UseClass__OperationsAssignment_3_1)*
	{ after(grammarAccess.getUseClassAccess().getOperationsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UseClass__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseClass__Group_4__0__Impl
	rule__UseClass__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseClass__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseClassAccess().getConstraintsKeyword_4_0()); }
	'constraints'
	{ after(grammarAccess.getUseClassAccess().getConstraintsKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseClass__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseClass__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseClass__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseClassAccess().getConstraintsAssignment_4_1()); }
	(rule__UseClass__ConstraintsAssignment_4_1)*
	{ after(grammarAccess.getUseClassAccess().getConstraintsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getNameAssignment_0()); }
	(rule__Attribute__NameAssignment_0)
	{ after(grammarAccess.getAttributeAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getAttributeAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__2__Impl
	rule__Attribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getTypeAssignment_2()); }
	(rule__Attribute__TypeAssignment_2)
	{ after(grammarAccess.getAttributeAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__3__Impl
	rule__Attribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getGroup_3()); }
	(rule__Attribute__Group_3__0)?
	{ after(grammarAccess.getAttributeAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getGroup_4()); }
	(rule__Attribute__Group_4__0)?
	{ after(grammarAccess.getAttributeAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_3__0__Impl
	rule__Attribute__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getInitKeyword_3_0()); }
	'init'
	{ after(grammarAccess.getAttributeAccess().getInitKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_3__1__Impl
	rule__Attribute__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getColonKeyword_3_1()); }
	':'
	{ after(grammarAccess.getAttributeAccess().getColonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getInitializationAssignment_3_2()); }
	(rule__Attribute__InitializationAssignment_3_2)
	{ after(grammarAccess.getAttributeAccess().getInitializationAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_4__0__Impl
	rule__Attribute__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getDerivedKeyword_4_0()); }
	'derived'
	{ after(grammarAccess.getAttributeAccess().getDerivedKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_4__1__Impl
	rule__Attribute__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getColonKeyword_4_1()); }
	':'
	{ after(grammarAccess.getAttributeAccess().getColonKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getDerivedFromAssignment_4_2()); }
	(rule__Attribute__DerivedFromAssignment_4_2)
	{ after(grammarAccess.getAttributeAccess().getDerivedFromAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__0__Impl
	rule__Method__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getNameAssignment_0()); }
	(rule__Method__NameAssignment_0)
	{ after(grammarAccess.getMethodAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__1__Impl
	rule__Method__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getMethodAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__2__Impl
	rule__Method__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getInputParametersAssignment_2()); }
	(rule__Method__InputParametersAssignment_2)*
	{ after(grammarAccess.getMethodAccess().getInputParametersAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__3__Impl
	rule__Method__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getMethodAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__4__Impl
	rule__Method__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getGroup_4()); }
	(rule__Method__Group_4__0)?
	{ after(grammarAccess.getMethodAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__5__Impl
	rule__Method__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getGroup_5()); }
	(rule__Method__Group_5__0)?
	{ after(grammarAccess.getMethodAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getConditionsAssignment_6()); }
	(rule__Method__ConditionsAssignment_6)*
	{ after(grammarAccess.getMethodAccess().getConditionsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_4__0__Impl
	rule__Method__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getColonKeyword_4_0()); }
	':'
	{ after(grammarAccess.getMethodAccess().getColonKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getReturnParameterAssignment_4_1()); }
	(rule__Method__ReturnParameterAssignment_4_1)
	{ after(grammarAccess.getMethodAccess().getReturnParameterAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_5__0__Impl
	rule__Method__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getBeginKeyword_5_0()); }
	'begin'
	{ after(grammarAccess.getMethodAccess().getBeginKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_5__1__Impl
	rule__Method__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getOperationBodyAssignment_5_1()); }
	(rule__Method__OperationBodyAssignment_5_1)
	{ after(grammarAccess.getMethodAccess().getOperationBodyAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getEndKeyword_5_2()); }
	'end'
	{ after(grammarAccess.getMethodAccess().getEndKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Query__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__0__Impl
	rule__Query__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getNameAssignment_0()); }
	(rule__Query__NameAssignment_0)
	{ after(grammarAccess.getQueryAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__1__Impl
	rule__Query__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getQueryAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__2__Impl
	rule__Query__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getInputParametersAssignment_2()); }
	(rule__Query__InputParametersAssignment_2)*
	{ after(grammarAccess.getQueryAccess().getInputParametersAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__3__Impl
	rule__Query__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getQueryAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__4__Impl
	rule__Query__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getColonKeyword_4()); }
	':'
	{ after(grammarAccess.getQueryAccess().getColonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__5__Impl
	rule__Query__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getReturnParameterAssignment_5()); }
	(rule__Query__ReturnParameterAssignment_5)
	{ after(grammarAccess.getQueryAccess().getReturnParameterAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__6__Impl
	rule__Query__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getEqualsSignKeyword_6()); }
	'='
	{ after(grammarAccess.getQueryAccess().getEqualsSignKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getOperationBodyAssignment_7()); }
	(rule__Query__OperationBodyAssignment_7)
	{ after(grammarAccess.getQueryAccess().getOperationBodyAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getNameAssignment_0()); }
	(rule__Parameter__NameAssignment_0)
	{ after(grammarAccess.getParameterAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getParameterAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__2__Impl
	rule__Parameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getTypeAssignment_2()); }
	(rule__Parameter__TypeAssignment_2)
	{ after(grammarAccess.getParameterAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getCommaKeyword_3()); }
	(',')?
	{ after(grammarAccess.getParameterAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Precondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Precondition__Group__0__Impl
	rule__Precondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreconditionAccess().getPreKeyword_0()); }
	'pre'
	{ after(grammarAccess.getPreconditionAccess().getPreKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Precondition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreconditionAccess().getConditionBodyAssignment_1()); }
	(rule__Precondition__ConditionBodyAssignment_1)
	{ after(grammarAccess.getPreconditionAccess().getConditionBodyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Postcondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postcondition__Group__0__Impl
	rule__Postcondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Postcondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostconditionAccess().getPostKeyword_0()); }
	'post'
	{ after(grammarAccess.getPostconditionAccess().getPostKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postcondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postcondition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Postcondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostconditionAccess().getConditionBodyAssignment_1()); }
	(rule__Postcondition__ConditionBodyAssignment_1)
	{ after(grammarAccess.getPostconditionAccess().getConditionBodyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionBody__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionBody__Group__0__Impl
	rule__ConditionBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionBody__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionBodyAccess().getNameAssignment_0()); }
	(rule__ConditionBody__NameAssignment_0)?
	{ after(grammarAccess.getConditionBodyAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionBody__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionBody__Group__1__Impl
	rule__ConditionBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionBody__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionBodyAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getConditionBodyAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionBody__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionBody__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionBody__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionBodyAccess().getConditionAssignment_2()); }
	(rule__ConditionBody__ConditionAssignment_2)
	{ after(grammarAccess.getConditionBodyAccess().getConditionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__0__Impl
	rule__Constraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getInvKeyword_0()); }
	'inv'
	{ after(grammarAccess.getConstraintAccess().getInvKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getConditionBodyAssignment_1()); }
	(rule__Constraint__ConditionBodyAssignment_1)
	{ after(grammarAccess.getConstraintAccess().getConditionBodyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group__0__Impl
	rule__Association__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getAssociationKeyword_0()); }
	'association'
	{ after(grammarAccess.getAssociationAccess().getAssociationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group__1__Impl
	rule__Association__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getNameAssignment_1()); }
	(rule__Association__NameAssignment_1)
	{ after(grammarAccess.getAssociationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group__2__Impl
	rule__Association__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getBetweenKeyword_2()); }
	'between'
	{ after(grammarAccess.getAssociationAccess().getBetweenKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group__3__Impl
	rule__Association__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getRelationBodyAssignment_3()); }
	(rule__Association__RelationBodyAssignment_3)
	{ after(grammarAccess.getAssociationAccess().getRelationBodyAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getEndKeyword_4()); }
	'end'
	{ after(grammarAccess.getAssociationAccess().getEndKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__0__Impl
	rule__Composition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getCompositionKeyword_0()); }
	'composition'
	{ after(grammarAccess.getCompositionAccess().getCompositionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__1__Impl
	rule__Composition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getNameAssignment_1()); }
	(rule__Composition__NameAssignment_1)
	{ after(grammarAccess.getCompositionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__2__Impl
	rule__Composition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getBetweenKeyword_2()); }
	'between'
	{ after(grammarAccess.getCompositionAccess().getBetweenKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__3__Impl
	rule__Composition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getRelationBodyAssignment_3()); }
	(rule__Composition__RelationBodyAssignment_3)
	{ after(grammarAccess.getCompositionAccess().getRelationBodyAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getEndKeyword_4()); }
	'end'
	{ after(grammarAccess.getCompositionAccess().getEndKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationBody__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationBody__Group__0__Impl
	rule__RelationBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationBody__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationBodyAccess().getOriginClassAssignment_0()); }
	(rule__RelationBody__OriginClassAssignment_0)
	{ after(grammarAccess.getRelationBodyAccess().getOriginClassAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationBody__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationBody__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationBody__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationBodyAccess().getDestinyClassAssignment_1()); }
	(rule__RelationBody__DestinyClassAssignment_1)
	{ after(grammarAccess.getRelationBodyAccess().getDestinyClassAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationMember__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationMember__Group__0__Impl
	rule__RelationMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationMember__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationMemberAccess().getClassAssignment_0()); }
	(rule__RelationMember__ClassAssignment_0)
	{ after(grammarAccess.getRelationMemberAccess().getClassAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationMember__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationMember__Group__1__Impl
	rule__RelationMember__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationMember__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationMemberAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getRelationMemberAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationMember__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationMember__Group__2__Impl
	rule__RelationMember__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationMember__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationMemberAccess().getCardinalityAssignment_2()); }
	(rule__RelationMember__CardinalityAssignment_2)
	{ after(grammarAccess.getRelationMemberAccess().getCardinalityAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationMember__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationMember__Group__3__Impl
	rule__RelationMember__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationMember__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationMemberAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getRelationMemberAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationMember__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationMember__Group__4__Impl
	rule__RelationMember__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationMember__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationMemberAccess().getRoleKeyword_4()); }
	'role'
	{ after(grammarAccess.getRelationMemberAccess().getRoleKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationMember__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationMember__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationMember__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationMemberAccess().getRoleNameAssignment_5()); }
	(rule__RelationMember__RoleNameAssignment_5)
	{ after(grammarAccess.getRelationMemberAccess().getRoleNameAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DoubleCardinality__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoubleCardinality__Group__0__Impl
	rule__DoubleCardinality__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleCardinality__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoubleCardinalityAccess().getOriginCardinalityAssignment_0()); }
	(rule__DoubleCardinality__OriginCardinalityAssignment_0)
	{ after(grammarAccess.getDoubleCardinalityAccess().getOriginCardinalityAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleCardinality__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoubleCardinality__Group__1__Impl
	rule__DoubleCardinality__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleCardinality__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoubleCardinalityAccess().getFullStopFullStopKeyword_1()); }
	'..'
	{ after(grammarAccess.getDoubleCardinalityAccess().getFullStopFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleCardinality__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoubleCardinality__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleCardinality__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoubleCardinalityAccess().getDestinyCardinalityAssignment_2()); }
	(rule__DoubleCardinality__DestinyCardinalityAssignment_2)
	{ after(grammarAccess.getDoubleCardinalityAccess().getDestinyCardinalityAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ElementsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getElementsAbstractElementParserRuleCall_2_0()); }
		ruleAbstractElement
		{ after(grammarAccess.getModelAccess().getElementsAbstractElementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseClass__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseClassAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getUseClassAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseClass__AttributesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseClassAccess().getAttributesAttributeParserRuleCall_2_1_0()); }
		ruleAttribute
		{ after(grammarAccess.getUseClassAccess().getAttributesAttributeParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseClass__OperationsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseClassAccess().getOperationsOperationParserRuleCall_3_1_0()); }
		ruleOperation
		{ after(grammarAccess.getUseClassAccess().getOperationsOperationParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseClass__ConstraintsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseClassAccess().getConstraintsConstraintParserRuleCall_4_1_0()); }
		ruleConstraint
		{ after(grammarAccess.getUseClassAccess().getConstraintsConstraintParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getTypeAttributeTypeParserRuleCall_2_0()); }
		ruleAttributeType
		{ after(grammarAccess.getAttributeAccess().getTypeAttributeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__InitializationAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getInitializationAttributeInitializationParserRuleCall_3_2_0()); }
		ruleAttributeInitialization
		{ after(grammarAccess.getAttributeAccess().getInitializationAttributeInitializationParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__DerivedFromAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getDerivedFromIDTerminalRuleCall_4_2_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributeAccess().getDerivedFromIDTerminalRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getTypeAlternatives_0()); }
		(rule__PrimitiveType__TypeAlternatives_0)
		{ after(grammarAccess.getPrimitiveTypeAccess().getTypeAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassType__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassTypeAccess().getTypeUseClassCrossReference_0()); }
		(
			{ before(grammarAccess.getClassTypeAccess().getTypeUseClassIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getClassTypeAccess().getTypeUseClassIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getClassTypeAccess().getTypeUseClassCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleInitialization__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoubleInitializationAccess().getValueDOUBLETerminalRuleCall_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getDoubleInitializationAccess().getValueDOUBLETerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanInitialization__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanInitializationAccess().getValueBOOLEANTerminalRuleCall_0()); }
		RULE_BOOLEAN
		{ after(grammarAccess.getBooleanInitializationAccess().getValueBOOLEANTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerInitialization__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerInitializationAccess().getValueINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getIntegerInitializationAccess().getValueINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringInitialization__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringInitializationAccess().getValueSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getStringInitializationAccess().getValueSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__InputParametersAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getInputParametersParameterParserRuleCall_2_0()); }
		ruleParameter
		{ after(grammarAccess.getMethodAccess().getInputParametersParameterParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ReturnParameterAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getReturnParameterAttributeTypeParserRuleCall_4_1_0()); }
		ruleAttributeType
		{ after(grammarAccess.getMethodAccess().getReturnParameterAttributeTypeParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__OperationBodyAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getOperationBodyIDTerminalRuleCall_5_1_0()); }
		RULE_ID
		{ after(grammarAccess.getMethodAccess().getOperationBodyIDTerminalRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ConditionsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getConditionsConditionParserRuleCall_6_0()); }
		ruleCondition
		{ after(grammarAccess.getMethodAccess().getConditionsConditionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getQueryAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__InputParametersAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryAccess().getInputParametersParameterParserRuleCall_2_0()); }
		ruleParameter
		{ after(grammarAccess.getQueryAccess().getInputParametersParameterParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__ReturnParameterAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryAccess().getReturnParameterAttributeTypeParserRuleCall_5_0()); }
		ruleAttributeType
		{ after(grammarAccess.getQueryAccess().getReturnParameterAttributeTypeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__OperationBodyAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryAccess().getOperationBodyIDTerminalRuleCall_7_0()); }
		RULE_ID
		{ after(grammarAccess.getQueryAccess().getOperationBodyIDTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getTypeAttributeTypeParserRuleCall_2_0()); }
		ruleAttributeType
		{ after(grammarAccess.getParameterAccess().getTypeAttributeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__ConditionBodyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreconditionAccess().getConditionBodyConditionBodyParserRuleCall_1_0()); }
		ruleConditionBody
		{ after(grammarAccess.getPreconditionAccess().getConditionBodyConditionBodyParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postcondition__ConditionBodyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostconditionAccess().getConditionBodyConditionBodyParserRuleCall_1_0()); }
		ruleConditionBody
		{ after(grammarAccess.getPostconditionAccess().getConditionBodyConditionBodyParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionBody__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionBodyAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getConditionBodyAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionBody__ConditionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionBodyAccess().getConditionIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getConditionBodyAccess().getConditionIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__ConditionBodyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintAccess().getConditionBodyConditionBodyParserRuleCall_1_0()); }
		ruleConditionBody
		{ after(grammarAccess.getConstraintAccess().getConditionBodyConditionBodyParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssociationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAssociationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__RelationBodyAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssociationAccess().getRelationBodyRelationBodyParserRuleCall_3_0()); }
		ruleRelationBody
		{ after(grammarAccess.getAssociationAccess().getRelationBodyRelationBodyParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getCompositionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__RelationBodyAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getRelationBodyRelationBodyParserRuleCall_3_0()); }
		ruleRelationBody
		{ after(grammarAccess.getCompositionAccess().getRelationBodyRelationBodyParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationBody__OriginClassAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationBodyAccess().getOriginClassRelationMemberParserRuleCall_0_0()); }
		ruleRelationMember
		{ after(grammarAccess.getRelationBodyAccess().getOriginClassRelationMemberParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationBody__DestinyClassAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationBodyAccess().getDestinyClassRelationMemberParserRuleCall_1_0()); }
		ruleRelationMember
		{ after(grammarAccess.getRelationBodyAccess().getDestinyClassRelationMemberParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationMember__ClassAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationMemberAccess().getClassUseClassCrossReference_0_0()); }
		(
			{ before(grammarAccess.getRelationMemberAccess().getClassUseClassIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRelationMemberAccess().getClassUseClassIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getRelationMemberAccess().getClassUseClassCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationMember__CardinalityAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationMemberAccess().getCardinalityCardinalityTypeParserRuleCall_2_0()); }
		ruleCardinalityType
		{ after(grammarAccess.getRelationMemberAccess().getCardinalityCardinalityTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationMember__RoleNameAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationMemberAccess().getRoleNameIDTerminalRuleCall_5_0()); }
		RULE_ID
		{ after(grammarAccess.getRelationMemberAccess().getRoleNameIDTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleCardinality__CardinalityAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleCardinalityAccess().getCardinalityCardinalityValueParserRuleCall_0()); }
		ruleCardinalityValue
		{ after(grammarAccess.getSimpleCardinalityAccess().getCardinalityCardinalityValueParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleCardinality__OriginCardinalityAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoubleCardinalityAccess().getOriginCardinalityCardinalityValueParserRuleCall_0_0()); }
		ruleCardinalityValue
		{ after(grammarAccess.getDoubleCardinalityAccess().getOriginCardinalityCardinalityValueParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleCardinality__DestinyCardinalityAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoubleCardinalityAccess().getDestinyCardinalityCardinalityValueParserRuleCall_2_0()); }
		ruleCardinalityValue
		{ after(grammarAccess.getDoubleCardinalityAccess().getDestinyCardinalityCardinalityValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntCardinality__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntCardinalityAccess().getValueINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getIntCardinalityAccess().getValueINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AsteriskCardinality__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAsteriskCardinalityAccess().getValueASTERISKTerminalRuleCall_0()); }
		RULE_ASTERISK
		{ after(grammarAccess.getAsteriskCardinalityAccess().getValueASTERISKTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_INT : '-'? ('0'..'9')+;

RULE_DOUBLE : '-'? RULE_INT '.' RULE_INT;

RULE_BOOLEAN : ('true'|'false');

RULE_ASTERISK : '*';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
