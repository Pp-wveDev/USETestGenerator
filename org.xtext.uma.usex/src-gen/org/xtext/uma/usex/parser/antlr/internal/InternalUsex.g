/*
 * generated by Xtext 2.25.0
 */
grammar InternalUsex;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.uma.usex.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.uma.usex.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.uma.usex.services.UsexGrammarAccess;

}

@parser::members {

 	private UsexGrammarAccess grammarAccess;

    public InternalUsexParser(TokenStream input, UsexGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected UsexGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='model'
		{
			newLeafNode(otherlv_0, grammarAccess.getModelAccess().getModelKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getElementsAbstractElementParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleAbstractElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"org.xtext.uma.usex.Usex.AbstractElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleAbstractElement
entryRuleAbstractElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractElementRule()); }
	iv_ruleAbstractElement=ruleAbstractElement
	{ $current=$iv_ruleAbstractElement.current; }
	EOF;

// Rule AbstractElement
ruleAbstractElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getRelationParserRuleCall_0());
		}
		this_Relation_0=ruleRelation
		{
			$current = $this_Relation_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getUseClassParserRuleCall_1());
		}
		this_UseClass_1=ruleUseClass
		{
			$current = $this_UseClass_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleUseClass
entryRuleUseClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUseClassRule()); }
	iv_ruleUseClass=ruleUseClass
	{ $current=$iv_ruleUseClass.current; }
	EOF;

// Rule UseClass
ruleUseClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='class'
		{
			newLeafNode(otherlv_0, grammarAccess.getUseClassAccess().getClassKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getUseClassAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUseClassRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='attributes'
			{
				newLeafNode(otherlv_2, grammarAccess.getUseClassAccess().getAttributesKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUseClassAccess().getAttributesAttributeParserRuleCall_2_1_0());
					}
					lv_attributes_3_0=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUseClassRule());
						}
						add(
							$current,
							"attributes",
							lv_attributes_3_0,
							"org.xtext.uma.usex.Usex.Attribute");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			otherlv_4='operations'
			{
				newLeafNode(otherlv_4, grammarAccess.getUseClassAccess().getOperationsKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUseClassAccess().getOperationsOperationParserRuleCall_3_1_0());
					}
					lv_operations_5_0=ruleOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUseClassRule());
						}
						add(
							$current,
							"operations",
							lv_operations_5_0,
							"org.xtext.uma.usex.Usex.Operation");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			otherlv_6='constraints'
			{
				newLeafNode(otherlv_6, grammarAccess.getUseClassAccess().getConstraintsKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUseClassAccess().getConstraintsConstraintParserRuleCall_4_1_0());
					}
					lv_constraints_7_0=ruleConstraint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUseClassRule());
						}
						add(
							$current,
							"constraints",
							lv_constraints_7_0,
							"org.xtext.uma.usex.Usex.Constraint");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		otherlv_8='end'
		{
			newLeafNode(otherlv_8, grammarAccess.getUseClassAccess().getEndKeyword_5());
		}
	)
;

// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	iv_ruleAttribute=ruleAttribute
	{ $current=$iv_ruleAttribute.current; }
	EOF;

// Rule Attribute
ruleAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getAttributeAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getTypeAttributeTypeParserRuleCall_2_0());
				}
				lv_type_2_0=ruleAttributeType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"org.xtext.uma.usex.Usex.AttributeType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='init'
			{
				newLeafNode(otherlv_3, grammarAccess.getAttributeAccess().getInitKeyword_3_0());
			}
			otherlv_4=':'
			{
				newLeafNode(otherlv_4, grammarAccess.getAttributeAccess().getColonKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAttributeAccess().getInitializationAttributeInitializationParserRuleCall_3_2_0());
					}
					lv_initialization_5_0=ruleAttributeInitialization
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttributeRule());
						}
						set(
							$current,
							"initialization",
							lv_initialization_5_0,
							"org.xtext.uma.usex.Usex.AttributeInitialization");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='derived'
			{
				newLeafNode(otherlv_6, grammarAccess.getAttributeAccess().getDerivedKeyword_4_0());
			}
			otherlv_7=':'
			{
				newLeafNode(otherlv_7, grammarAccess.getAttributeAccess().getColonKeyword_4_1());
			}
			(
				(
					lv_derivedFrom_8_0=RULE_ID
					{
						newLeafNode(lv_derivedFrom_8_0, grammarAccess.getAttributeAccess().getDerivedFromIDTerminalRuleCall_4_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAttributeRule());
						}
						setWithLastConsumed(
							$current,
							"derivedFrom",
							lv_derivedFrom_8_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleAttributeType
entryRuleAttributeType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeTypeRule()); }
	iv_ruleAttributeType=ruleAttributeType
	{ $current=$iv_ruleAttributeType.current; }
	EOF;

// Rule AttributeType
ruleAttributeType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAttributeTypeAccess().getPrimitiveTypeParserRuleCall_0());
		}
		this_PrimitiveType_0=rulePrimitiveType
		{
			$current = $this_PrimitiveType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAttributeTypeAccess().getClassTypeParserRuleCall_1());
		}
		this_ClassType_1=ruleClassType
		{
			$current = $this_ClassType_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePrimitiveType
entryRulePrimitiveType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimitiveTypeRule()); }
	iv_rulePrimitiveType=rulePrimitiveType
	{ $current=$iv_rulePrimitiveType.current; }
	EOF;

// Rule PrimitiveType
rulePrimitiveType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_type_0_1='String'
				{
					newLeafNode(lv_type_0_1, grammarAccess.getPrimitiveTypeAccess().getTypeStringKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveTypeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_1, null);
				}
				    |
				lv_type_0_2='Real'
				{
					newLeafNode(lv_type_0_2, grammarAccess.getPrimitiveTypeAccess().getTypeRealKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveTypeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_2, null);
				}
				    |
				lv_type_0_3='Integer'
				{
					newLeafNode(lv_type_0_3, grammarAccess.getPrimitiveTypeAccess().getTypeIntegerKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveTypeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_3, null);
				}
				    |
				lv_type_0_4='Boolean'
				{
					newLeafNode(lv_type_0_4, grammarAccess.getPrimitiveTypeAccess().getTypeBooleanKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveTypeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_4, null);
				}
			)
		)
	)
;

// Entry rule entryRuleClassType
entryRuleClassType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassTypeRule()); }
	iv_ruleClassType=ruleClassType
	{ $current=$iv_ruleClassType.current; }
	EOF;

// Rule ClassType
ruleClassType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getClassTypeRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getClassTypeAccess().getTypeUseClassCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleAttributeInitialization
entryRuleAttributeInitialization returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeInitializationRule()); }
	iv_ruleAttributeInitialization=ruleAttributeInitialization
	{ $current=$iv_ruleAttributeInitialization.current; }
	EOF;

// Rule AttributeInitialization
ruleAttributeInitialization returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAttributeInitializationAccess().getDoubleInitializationParserRuleCall_0());
		}
		this_DoubleInitialization_0=ruleDoubleInitialization
		{
			$current = $this_DoubleInitialization_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAttributeInitializationAccess().getBooleanInitializationParserRuleCall_1());
		}
		this_BooleanInitialization_1=ruleBooleanInitialization
		{
			$current = $this_BooleanInitialization_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAttributeInitializationAccess().getIntegerInitializationParserRuleCall_2());
		}
		this_IntegerInitialization_2=ruleIntegerInitialization
		{
			$current = $this_IntegerInitialization_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAttributeInitializationAccess().getStringInitializationParserRuleCall_3());
		}
		this_StringInitialization_3=ruleStringInitialization
		{
			$current = $this_StringInitialization_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDoubleInitialization
entryRuleDoubleInitialization returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDoubleInitializationRule()); }
	iv_ruleDoubleInitialization=ruleDoubleInitialization
	{ $current=$iv_ruleDoubleInitialization.current; }
	EOF;

// Rule DoubleInitialization
ruleDoubleInitialization returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_DOUBLE
			{
				newLeafNode(lv_value_0_0, grammarAccess.getDoubleInitializationAccess().getValueDOUBLETerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getDoubleInitializationRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.xtext.uma.usex.Usex.DOUBLE");
			}
		)
	)
;

// Entry rule entryRuleBooleanInitialization
entryRuleBooleanInitialization returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanInitializationRule()); }
	iv_ruleBooleanInitialization=ruleBooleanInitialization
	{ $current=$iv_ruleBooleanInitialization.current; }
	EOF;

// Rule BooleanInitialization
ruleBooleanInitialization returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_BOOLEAN
			{
				newLeafNode(lv_value_0_0, grammarAccess.getBooleanInitializationAccess().getValueBOOLEANTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getBooleanInitializationRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.xtext.uma.usex.Usex.BOOLEAN");
			}
		)
	)
;

// Entry rule entryRuleIntegerInitialization
entryRuleIntegerInitialization returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntegerInitializationRule()); }
	iv_ruleIntegerInitialization=ruleIntegerInitialization
	{ $current=$iv_ruleIntegerInitialization.current; }
	EOF;

// Rule IntegerInitialization
ruleIntegerInitialization returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_INT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getIntegerInitializationAccess().getValueINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getIntegerInitializationRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.xtext.uma.usex.Usex.INT");
			}
		)
	)
;

// Entry rule entryRuleStringInitialization
entryRuleStringInitialization returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringInitializationRule()); }
	iv_ruleStringInitialization=ruleStringInitialization
	{ $current=$iv_ruleStringInitialization.current; }
	EOF;

// Rule StringInitialization
ruleStringInitialization returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_STRING
			{
				newLeafNode(lv_value_0_0, grammarAccess.getStringInitializationAccess().getValueSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStringInitializationRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleOperation
entryRuleOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationRule()); }
	iv_ruleOperation=ruleOperation
	{ $current=$iv_ruleOperation.current; }
	EOF;

// Rule Operation
ruleOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOperationAccess().getMethodParserRuleCall_0());
		}
		this_Method_0=ruleMethod
		{
			$current = $this_Method_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationAccess().getQueryParserRuleCall_1());
		}
		this_Query_1=ruleQuery
		{
			$current = $this_Query_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMethod
entryRuleMethod returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodRule()); }
	iv_ruleMethod=ruleMethod
	{ $current=$iv_ruleMethod.current; }
	EOF;

// Rule Method
ruleMethod returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getMethodAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodAccess().getInputParametersParameterParserRuleCall_2_0());
				}
				lv_inputParameters_2_0=ruleParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodRule());
					}
					add(
						$current,
						"inputParameters",
						lv_inputParameters_2_0,
						"org.xtext.uma.usex.Usex.Parameter");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getMethodAccess().getRightParenthesisKeyword_3());
		}
		(
			otherlv_4=':'
			{
				newLeafNode(otherlv_4, grammarAccess.getMethodAccess().getColonKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodAccess().getReturnParameterAttributeTypeParserRuleCall_4_1_0());
					}
					lv_returnParameter_5_0=ruleAttributeType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodRule());
						}
						set(
							$current,
							"returnParameter",
							lv_returnParameter_5_0,
							"org.xtext.uma.usex.Usex.AttributeType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='begin'
			{
				newLeafNode(otherlv_6, grammarAccess.getMethodAccess().getBeginKeyword_5_0());
			}
			(
				(
					lv_operationBody_7_0=RULE_ID
					{
						newLeafNode(lv_operationBody_7_0, grammarAccess.getMethodAccess().getOperationBodyIDTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMethodRule());
						}
						setWithLastConsumed(
							$current,
							"operationBody",
							lv_operationBody_7_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_8='end'
			{
				newLeafNode(otherlv_8, grammarAccess.getMethodAccess().getEndKeyword_5_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodAccess().getConditionsConditionParserRuleCall_6_0());
				}
				lv_conditions_9_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodRule());
					}
					add(
						$current,
						"conditions",
						lv_conditions_9_0,
						"org.xtext.uma.usex.Usex.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleQuery
entryRuleQuery returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQueryRule()); }
	iv_ruleQuery=ruleQuery
	{ $current=$iv_ruleQuery.current; }
	EOF;

// Rule Query
ruleQuery returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getQueryAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQueryRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getQueryAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getQueryAccess().getInputParametersParameterParserRuleCall_2_0());
				}
				lv_inputParameters_2_0=ruleParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQueryRule());
					}
					add(
						$current,
						"inputParameters",
						lv_inputParameters_2_0,
						"org.xtext.uma.usex.Usex.Parameter");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getQueryAccess().getRightParenthesisKeyword_3());
		}
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getQueryAccess().getColonKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getQueryAccess().getReturnParameterAttributeTypeParserRuleCall_5_0());
				}
				lv_returnParameter_5_0=ruleAttributeType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQueryRule());
					}
					set(
						$current,
						"returnParameter",
						lv_returnParameter_5_0,
						"org.xtext.uma.usex.Usex.AttributeType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='='
		{
			newLeafNode(otherlv_6, grammarAccess.getQueryAccess().getEqualsSignKeyword_6());
		}
		(
			(
				lv_operationBody_7_0=RULE_ID
				{
					newLeafNode(lv_operationBody_7_0, grammarAccess.getQueryAccess().getOperationBodyIDTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQueryRule());
					}
					setWithLastConsumed(
						$current,
						"operationBody",
						lv_operationBody_7_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getParameterAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterAccess().getTypeAttributeTypeParserRuleCall_2_0());
				}
				lv_type_2_0=ruleAttributeType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"org.xtext.uma.usex.Usex.AttributeType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getParameterAccess().getCommaKeyword_3());
			}
		)?
	)
;

// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	iv_ruleCondition=ruleCondition
	{ $current=$iv_ruleCondition.current; }
	EOF;

// Rule Condition
ruleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getConditionAccess().getPreconditionParserRuleCall_0());
		}
		this_Precondition_0=rulePrecondition
		{
			$current = $this_Precondition_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConditionAccess().getPostconditionParserRuleCall_1());
		}
		this_Postcondition_1=rulePostcondition
		{
			$current = $this_Postcondition_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePrecondition
entryRulePrecondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPreconditionRule()); }
	iv_rulePrecondition=rulePrecondition
	{ $current=$iv_rulePrecondition.current; }
	EOF;

// Rule Precondition
rulePrecondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='pre'
		{
			newLeafNode(otherlv_0, grammarAccess.getPreconditionAccess().getPreKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPreconditionAccess().getConditionBodyConditionBodyParserRuleCall_1_0());
				}
				lv_conditionBody_1_0=ruleConditionBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPreconditionRule());
					}
					set(
						$current,
						"conditionBody",
						lv_conditionBody_1_0,
						"org.xtext.uma.usex.Usex.ConditionBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePostcondition
entryRulePostcondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPostconditionRule()); }
	iv_rulePostcondition=rulePostcondition
	{ $current=$iv_rulePostcondition.current; }
	EOF;

// Rule Postcondition
rulePostcondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='post'
		{
			newLeafNode(otherlv_0, grammarAccess.getPostconditionAccess().getPostKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPostconditionAccess().getConditionBodyConditionBodyParserRuleCall_1_0());
				}
				lv_conditionBody_1_0=ruleConditionBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPostconditionRule());
					}
					set(
						$current,
						"conditionBody",
						lv_conditionBody_1_0,
						"org.xtext.uma.usex.Usex.ConditionBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleConditionBody
entryRuleConditionBody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionBodyRule()); }
	iv_ruleConditionBody=ruleConditionBody
	{ $current=$iv_ruleConditionBody.current; }
	EOF;

// Rule ConditionBody
ruleConditionBody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getConditionBodyAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConditionBodyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getConditionBodyAccess().getColonKeyword_1());
		}
		(
			(
				lv_condition_2_0=RULE_ID
				{
					newLeafNode(lv_condition_2_0, grammarAccess.getConditionBodyAccess().getConditionIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConditionBodyRule());
					}
					setWithLastConsumed(
						$current,
						"condition",
						lv_condition_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleConstraint
entryRuleConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstraintRule()); }
	iv_ruleConstraint=ruleConstraint
	{ $current=$iv_ruleConstraint.current; }
	EOF;

// Rule Constraint
ruleConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='inv'
		{
			newLeafNode(otherlv_0, grammarAccess.getConstraintAccess().getInvKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConstraintAccess().getConditionBodyConditionBodyParserRuleCall_1_0());
				}
				lv_conditionBody_1_0=ruleConditionBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstraintRule());
					}
					set(
						$current,
						"conditionBody",
						lv_conditionBody_1_0,
						"org.xtext.uma.usex.Usex.ConditionBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRelation
entryRuleRelation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationRule()); }
	iv_ruleRelation=ruleRelation
	{ $current=$iv_ruleRelation.current; }
	EOF;

// Rule Relation
ruleRelation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRelationAccess().getAssociationParserRuleCall_0());
		}
		this_Association_0=ruleAssociation
		{
			$current = $this_Association_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRelationAccess().getCompositionParserRuleCall_1());
		}
		this_Composition_1=ruleComposition
		{
			$current = $this_Composition_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAssociation
entryRuleAssociation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssociationRule()); }
	iv_ruleAssociation=ruleAssociation
	{ $current=$iv_ruleAssociation.current; }
	EOF;

// Rule Association
ruleAssociation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='association'
		{
			newLeafNode(otherlv_0, grammarAccess.getAssociationAccess().getAssociationKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAssociationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAssociationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='between'
		{
			newLeafNode(otherlv_2, grammarAccess.getAssociationAccess().getBetweenKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssociationAccess().getRelationBodyRelationBodyParserRuleCall_3_0());
				}
				lv_relationBody_3_0=ruleRelationBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssociationRule());
					}
					set(
						$current,
						"relationBody",
						lv_relationBody_3_0,
						"org.xtext.uma.usex.Usex.RelationBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='end'
		{
			newLeafNode(otherlv_4, grammarAccess.getAssociationAccess().getEndKeyword_4());
		}
	)
;

// Entry rule entryRuleComposition
entryRuleComposition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompositionRule()); }
	iv_ruleComposition=ruleComposition
	{ $current=$iv_ruleComposition.current; }
	EOF;

// Rule Composition
ruleComposition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='composition'
		{
			newLeafNode(otherlv_0, grammarAccess.getCompositionAccess().getCompositionKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCompositionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCompositionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='between'
		{
			newLeafNode(otherlv_2, grammarAccess.getCompositionAccess().getBetweenKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCompositionAccess().getRelationBodyRelationBodyParserRuleCall_3_0());
				}
				lv_relationBody_3_0=ruleRelationBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompositionRule());
					}
					set(
						$current,
						"relationBody",
						lv_relationBody_3_0,
						"org.xtext.uma.usex.Usex.RelationBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='end'
		{
			newLeafNode(otherlv_4, grammarAccess.getCompositionAccess().getEndKeyword_4());
		}
	)
;

// Entry rule entryRuleRelationBody
entryRuleRelationBody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationBodyRule()); }
	iv_ruleRelationBody=ruleRelationBody
	{ $current=$iv_ruleRelationBody.current; }
	EOF;

// Rule RelationBody
ruleRelationBody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRelationBodyAccess().getOriginClassRelationMemberParserRuleCall_0_0());
				}
				lv_originClass_0_0=ruleRelationMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelationBodyRule());
					}
					set(
						$current,
						"originClass",
						lv_originClass_0_0,
						"org.xtext.uma.usex.Usex.RelationMember");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRelationBodyAccess().getDestinyClassRelationMemberParserRuleCall_1_0());
				}
				lv_destinyClass_1_0=ruleRelationMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelationBodyRule());
					}
					set(
						$current,
						"destinyClass",
						lv_destinyClass_1_0,
						"org.xtext.uma.usex.Usex.RelationMember");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRelationMember
entryRuleRelationMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationMemberRule()); }
	iv_ruleRelationMember=ruleRelationMember
	{ $current=$iv_ruleRelationMember.current; }
	EOF;

// Rule RelationMember
ruleRelationMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationMemberRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getRelationMemberAccess().getClassUseClassCrossReference_0_0());
				}
			)
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getRelationMemberAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRelationMemberAccess().getCardinalityCardinalityTypeParserRuleCall_2_0());
				}
				lv_cardinality_2_0=ruleCardinalityType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelationMemberRule());
					}
					set(
						$current,
						"cardinality",
						lv_cardinality_2_0,
						"org.xtext.uma.usex.Usex.CardinalityType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=']'
		{
			newLeafNode(otherlv_3, grammarAccess.getRelationMemberAccess().getRightSquareBracketKeyword_3());
		}
		otherlv_4='role'
		{
			newLeafNode(otherlv_4, grammarAccess.getRelationMemberAccess().getRoleKeyword_4());
		}
		(
			(
				lv_roleName_5_0=RULE_ID
				{
					newLeafNode(lv_roleName_5_0, grammarAccess.getRelationMemberAccess().getRoleNameIDTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationMemberRule());
					}
					setWithLastConsumed(
						$current,
						"roleName",
						lv_roleName_5_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleCardinalityType
entryRuleCardinalityType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCardinalityTypeRule()); }
	iv_ruleCardinalityType=ruleCardinalityType
	{ $current=$iv_ruleCardinalityType.current; }
	EOF;

// Rule CardinalityType
ruleCardinalityType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCardinalityTypeAccess().getSimpleCardinalityParserRuleCall_0());
		}
		this_SimpleCardinality_0=ruleSimpleCardinality
		{
			$current = $this_SimpleCardinality_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCardinalityTypeAccess().getDoubleCardinalityParserRuleCall_1());
		}
		this_DoubleCardinality_1=ruleDoubleCardinality
		{
			$current = $this_DoubleCardinality_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSimpleCardinality
entryRuleSimpleCardinality returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleCardinalityRule()); }
	iv_ruleSimpleCardinality=ruleSimpleCardinality
	{ $current=$iv_ruleSimpleCardinality.current; }
	EOF;

// Rule SimpleCardinality
ruleSimpleCardinality returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getSimpleCardinalityAccess().getCardinalityCardinalityValueParserRuleCall_0());
			}
			lv_cardinality_0_0=ruleCardinalityValue
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getSimpleCardinalityRule());
				}
				set(
					$current,
					"cardinality",
					lv_cardinality_0_0,
					"org.xtext.uma.usex.Usex.CardinalityValue");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleDoubleCardinality
entryRuleDoubleCardinality returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDoubleCardinalityRule()); }
	iv_ruleDoubleCardinality=ruleDoubleCardinality
	{ $current=$iv_ruleDoubleCardinality.current; }
	EOF;

// Rule DoubleCardinality
ruleDoubleCardinality returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDoubleCardinalityAccess().getOriginCardinalityCardinalityValueParserRuleCall_0_0());
				}
				lv_originCardinality_0_0=ruleCardinalityValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDoubleCardinalityRule());
					}
					set(
						$current,
						"originCardinality",
						lv_originCardinality_0_0,
						"org.xtext.uma.usex.Usex.CardinalityValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='..'
		{
			newLeafNode(otherlv_1, grammarAccess.getDoubleCardinalityAccess().getFullStopFullStopKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDoubleCardinalityAccess().getDestinyCardinalityCardinalityValueParserRuleCall_2_0());
				}
				lv_destinyCardinality_2_0=ruleCardinalityValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDoubleCardinalityRule());
					}
					set(
						$current,
						"destinyCardinality",
						lv_destinyCardinality_2_0,
						"org.xtext.uma.usex.Usex.CardinalityValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCardinalityValue
entryRuleCardinalityValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCardinalityValueRule()); }
	iv_ruleCardinalityValue=ruleCardinalityValue
	{ $current=$iv_ruleCardinalityValue.current; }
	EOF;

// Rule CardinalityValue
ruleCardinalityValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCardinalityValueAccess().getIntCardinalityParserRuleCall_0());
		}
		this_IntCardinality_0=ruleIntCardinality
		{
			$current = $this_IntCardinality_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCardinalityValueAccess().getAsteriskCardinalityParserRuleCall_1());
		}
		this_AsteriskCardinality_1=ruleAsteriskCardinality
		{
			$current = $this_AsteriskCardinality_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleIntCardinality
entryRuleIntCardinality returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntCardinalityRule()); }
	iv_ruleIntCardinality=ruleIntCardinality
	{ $current=$iv_ruleIntCardinality.current; }
	EOF;

// Rule IntCardinality
ruleIntCardinality returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_INT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getIntCardinalityAccess().getValueINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getIntCardinalityRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.xtext.uma.usex.Usex.INT");
			}
		)
	)
;

// Entry rule entryRuleAsteriskCardinality
entryRuleAsteriskCardinality returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAsteriskCardinalityRule()); }
	iv_ruleAsteriskCardinality=ruleAsteriskCardinality
	{ $current=$iv_ruleAsteriskCardinality.current; }
	EOF;

// Rule AsteriskCardinality
ruleAsteriskCardinality returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_ASTERISK
			{
				newLeafNode(lv_value_0_0, grammarAccess.getAsteriskCardinalityAccess().getValueASTERISKTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getAsteriskCardinalityRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.xtext.uma.usex.Usex.ASTERISK");
			}
		)
	)
;

RULE_INT : '-'? ('0'..'9')+;

RULE_DOUBLE : '-'? RULE_INT '.' RULE_INT;

RULE_BOOLEAN : ('true'|'false');

RULE_ASTERISK : '*';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
