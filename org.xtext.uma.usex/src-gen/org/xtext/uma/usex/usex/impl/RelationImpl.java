/**
 * generated by Xtext 2.25.0
 */
package org.xtext.uma.usex.usex.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.uma.usex.usex.Relation;
import org.xtext.uma.usex.usex.RelationBody;
import org.xtext.uma.usex.usex.UsexPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Relation</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.uma.usex.usex.impl.RelationImpl#getRelationBody <em>Relation Body</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RelationImpl extends AbstractElementImpl implements Relation
{
  /**
   * The cached value of the '{@link #getRelationBody() <em>Relation Body</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRelationBody()
   * @generated
   * @ordered
   */
  protected RelationBody relationBody;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RelationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return UsexPackage.Literals.RELATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RelationBody getRelationBody()
  {
    return relationBody;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRelationBody(RelationBody newRelationBody, NotificationChain msgs)
  {
    RelationBody oldRelationBody = relationBody;
    relationBody = newRelationBody;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, UsexPackage.RELATION__RELATION_BODY, oldRelationBody, newRelationBody);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRelationBody(RelationBody newRelationBody)
  {
    if (newRelationBody != relationBody)
    {
      NotificationChain msgs = null;
      if (relationBody != null)
        msgs = ((InternalEObject)relationBody).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - UsexPackage.RELATION__RELATION_BODY, null, msgs);
      if (newRelationBody != null)
        msgs = ((InternalEObject)newRelationBody).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - UsexPackage.RELATION__RELATION_BODY, null, msgs);
      msgs = basicSetRelationBody(newRelationBody, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, UsexPackage.RELATION__RELATION_BODY, newRelationBody, newRelationBody));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case UsexPackage.RELATION__RELATION_BODY:
        return basicSetRelationBody(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case UsexPackage.RELATION__RELATION_BODY:
        return getRelationBody();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case UsexPackage.RELATION__RELATION_BODY:
        setRelationBody((RelationBody)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case UsexPackage.RELATION__RELATION_BODY:
        setRelationBody((RelationBody)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case UsexPackage.RELATION__RELATION_BODY:
        return relationBody != null;
    }
    return super.eIsSet(featureID);
  }

} //RelationImpl
